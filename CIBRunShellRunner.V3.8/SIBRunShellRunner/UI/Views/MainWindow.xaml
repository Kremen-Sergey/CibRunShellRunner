<Window x:Class="CIBRunShellRunner.MainWindow"
        Closing="Window_Closing"
        Loaded="Window_Loaded"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:CIBRunShellRunner.Views"
        Title="CIBRunShellRunner" MinHeight="370" MinWidth="810" Width="810">
    <Window.Resources>
        <views:MemoryConverter x:Key="MemoryConverter"/>
        <views:BoolInvertConverter x:Key="BoolInvertConverter"/>
        <views:PositiveNumberConverter x:Key="PositiveNumberConverter"/>
        <views:EnableStartButtonConverter x:Key="EnableStartButtonConverter"/>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="5,0,5,0" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,2,40,2" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="true">
                            <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                <Border BorderBrush="red" BorderThickness="1" />
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="200"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="*" MinHeight="100"></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Name="UpToSplitter" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="100*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140"></ColumnDefinition>
                <ColumnDefinition Width="80" MinWidth="50"></ColumnDefinition>
                <ColumnDefinition Width="120"></ColumnDefinition>
                <ColumnDefinition Width="120"></ColumnDefinition>
                <ColumnDefinition Width="100"></ColumnDefinition>
                <ColumnDefinition Width="120"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Name="NestedGrid" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="7" Margin="-10,0,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="100"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition MinWidth="100"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox Header="Input files" Margin="20,0,0,0">
                    <ListBox AllowDrop="{Binding IsEnabledAllExceptStopFlag}" x:Name="InputFiles" SelectionMode="Extended" ItemsSource="{Binding InputFilesList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto"  MinWidth="100" PreviewDragEnter="InputFiles_PreviewDragEnter" PreviewDrop="InputFiles_PreviewDrop" KeyDown="InputFiles_KeyDown" MouseDoubleClick="OpenFile">
                        <ListBox.ContextMenu>
                            <ContextMenu  Visibility="{Binding IsEnabledAllExceptStopFlag}">
                                <MenuItem Header="Add _files" IsCheckable="False" Click="AddInputFiles" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                                <MenuItem Header="Remove _files" IsCheckable="False" Click="RemoveSelectedInputFiles" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                                <MenuItem Header="Open" IsCheckable="False" Click="OpenFile" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                                <MenuItem Header="Open with" IsCheckable="False" Click="OpenFileWith" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
                <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Center"></GridSplitter>
                <GroupBox Grid.Row="0" Grid.Column="2" Header="Script files">
                    <ListBox AllowDrop="{Binding IsEnabledAllExceptStopFlag}" x:Name="ScriptFiles" SelectionMode="Extended" ItemsSource="{Binding ScriptFilesList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto" PreviewDragEnter="ScriptFiles_PreviewDragEnter" PreviewDrop="ScriptFiles_PreviewDrop" KeyDown="ScriptFiles_KeyDown" MouseDoubleClick="OpenScript">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add _scripts" IsCheckable="False" Click="AddScripts" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                                <MenuItem Header="Remove _scripts" IsCheckable="False" Click="RemoveSelectedScriptFiles" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                                <MenuItem Header="Open" IsCheckable="False" Click="OpenScript" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                                <MenuItem Header="Open with" IsCheckable="False" Click="OpenScriptWith" IsEnabled="{Binding IsEnabledAllExceptStopFlag}"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
            </Grid>
            <Label Grid.Row="1" Grid.Column="0" Content="CIBRunShell directory" HorizontalAlignment="Left" VerticalAlignment="Center" MinWidth="130"/>
            <Label Grid.Row="2" Grid.Column="0" Content="Output directoty" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Path=LaunchParameters.CIBRunShellDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="5" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" ClipToBounds="True" x:Name="CIBRunShellDirectory" Height="25" VerticalAlignment="Center" Width="Auto" Margin="5,5,5,5" HorizontalAlignment="Stretch" TextWrapping="NoWrap"/>
            <TextBox Text="{Binding Path=LaunchParameters.OutputDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="5" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" ClipToBounds="True" x:Name="OutputDirectory" Height="25" VerticalAlignment="Center" Width="Auto" Margin="5,5,5,5" HorizontalAlignment="Stretch" TextWrapping="NoWrap"/>
            <Button Height="25" Grid.Row="1" Grid.Column="6" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" x:Name="LoadCIBRunShellDirectory" Content="..." HorizontalAlignment="Left" Width="75" Click="LoadCIBRunShellDirectory_Click" Margin="25,0,0,0"/>
            <Button Height="25" Grid.Row="2" Grid.Column="6" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" x:Name="LoadOutputDirectory" Content="..." HorizontalAlignment="Left" Width="75" Click="LoadOutputDirectory_Click" Margin="25,0,0,0"/>
            <Button Grid.Row="3" Grid.Column="0" x:Name="StartButton" Content="Start" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,5,0,0" MinWidth="100" Height="30" Width="Auto" Command="{Binding RunCommand}">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource EnableStartButtonConverter}">
                        <Binding Path="IsEnabledStartButton"/>
                        <Binding Path="LaunchParameters.IsValidLaunchParameters"/>
                        <Binding Path="IsEnabledAllExceptStopFlag"/>
                        <Binding Path="LaunchParameters.BitIsSelectedFlag"/>
                        <Binding Path="InputFilesAndScriptsListsNotEmptyFlag"/>
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Button Grid.Row="4" Grid.Column="0" IsEnabled="{Binding IsEnabledAllExceptStopFlag, Converter={StaticResource BoolInvertConverter}}" x:Name="StopButton" Content="Stop" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,5,5,5" MinWidth="100" Height="30" Command="{Binding CancelCommand}"/>
            <CheckBox Grid.Row="3" Grid.Column="1" IsEnabled="{Binding Path=IsEnabledAllExceptStopFlag}" x:Name="_64BitCheckBox" IsChecked="{Binding LaunchParameters.Bit64, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" Content="64 bit" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBox Grid.Row="3" Grid.Column="1" Width="0" Margin="55,0,0,0" Text="{Binding Path=LaunchParameters.BitIsSelectedFlag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" HorizontalAlignment="Left"></TextBox>
            <CheckBox Grid.Row="4" Grid.Column="1" IsEnabled="{Binding Path=IsEnabledAllExceptStopFlag}" x:Name="_32BitCheckBox" IsChecked="{Binding LaunchParameters.Bit32, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" Content="32 bit" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Label Grid.Row="3" Grid.Column="2" x:Name="MemoryLimitLabel" Content="Memory limit, Mb" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Label Grid.Row="4" Grid.Column="2" x:Name="TimeLimitLabel" Content="Time limit, min" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBox Grid.Row="3" Grid.Column="3" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" x:Name="MemoryLimit" Text="{Binding LaunchParameters.MemoryLimit, Converter={StaticResource PositiveNumberConverter}}" Height="20" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" Margin="0,10,40,10"/>
            <TextBox Grid.Row="4" Grid.Column="3" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" x:Name="TimeLimit" Text="{Binding LaunchParameters.TimeLimit, Converter={StaticResource PositiveNumberConverter}}" Height="20" VerticalAlignment="Center" Margin="0,10,40,10"/>
            <Label Grid.Row="3" Grid.Column="4" x:Name="ProcessCountLabel" Content="Process count" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.184,0.577" Height="24" Width="85"/>
            <ComboBox SelectedIndex="0" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" SelectedItem="{Binding ProcessCount}" Grid.Row="3" Grid.Column="5" x:Name="ProcessCount"  ItemsSource="{Binding LaunchParameters.ProcessCountLimitList}" HorizontalAlignment="Left" Height="21" VerticalAlignment="Center" Width="100" Background="{Binding CIBRunShellDirextory.Background}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"></TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Grid.Row="4" Grid.Column="6" Height="25" IsEnabled="{Binding IsEnabledAllExceptStopFlag}" x:Name="ImportExel" Content="Export CSV" HorizontalAlignment="Left" Width="75" Margin="25,0,0,0" Click="ImportExel_Click"/>
            <TextBox Grid.Row="3" Grid.Column="6" Width="0" Margin="55,0,0,0" Text="{Binding Path=InputFilesAndScriptsListsNotEmptyFlagForBinding, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, NotifyOnValidationError=true}" HorizontalAlignment="Left"></TextBox>
            <StackPanel Grid.Row="4" Grid.Column="4" Grid.ColumnSpan="2">
                <RadioButton GroupName="InputFileCountFlag" Content="Each file with each script" IsChecked="{Binding InputFileCountFlag}"/>
                <RadioButton GroupName="InputFileCountFlag" Content="All files with each script"/>
            </StackPanel>
        </Grid>
        <GridSplitter Grid.Row="1" Grid.Column="0" Height="5" HorizontalAlignment="Stretch"></GridSplitter>
        <GroupBox  Header="Result" Grid.Row="2" Grid.Column="0">
            <DataGrid ClipboardCopyMode="IncludeHeader" CanUserSortColumns="True"  AutoGenerateColumns="False" SelectedItem="{Binding SelectedResult}" x:Name="OutputTable" ItemsSource="{Binding ResultsList}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Height="Auto" Width="Auto" MouseDoubleClick="OutputTable_MouseDoubleClick">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="InputFile" Width="Auto" CanUserSort="True"  Binding="{Binding InputFile, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Script" Width="Auto" Binding="{Binding Script}" />
                    <DataGridTextColumn Header="Output directory" Width="Auto" Binding="{Binding OutputDirectory}" />

                    <DataGridTemplateColumn Header="Status" Width="Auto" SortMemberPath="Status">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Status}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Text" Value="Waiting" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="SkyBlue" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Text" Value="Running" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="SandyBrown" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Text" Value="Completed" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="LightGreen" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Text" Value="Failed" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="Red" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Text" Value="KilledByMemory" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="Magenta" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Text" Value="KilledByTime" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="BlueViolet" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Text" Value="Aborted" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="Aqua" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Memory" Width="Auto" Binding="{Binding Memory, Converter={StaticResource MemoryConverter}}"/>
                    <DataGridTextColumn Header="Time" Width="Auto" Binding="{Binding Time}"/>
                    <DataGridTextColumn Header="Bit" Width="Auto" Binding="{Binding Bit}"/>
                    <DataGridTextColumn Header="Error" Width="Auto" Binding="{Binding Error}"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <StatusBar Name="ProgressStarusBar" Grid.Row="3">
            <StatusBarItem>
                <TextBlock Name="TimePasssedLabel" Text="Time passed: "></TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Name="TimePasssed">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0:D2}:{1:D2}:{2:D2}">
                            <Binding Path="TimePassed.Hours" />
                            <Binding Path="TimePassed.Minutes" />
                            <Binding Path="TimePassed.Seconds" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StatusBarItem>
            <Separator></Separator>
            <StatusBarItem>
                <TextBlock Name="ProcessedLabel" Text="Processed"></TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Name="ProcessedItemsCount" Text="{Binding ProcessedRecordsCount}"></TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Name="RecordsLabel" Text="records from"></TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Name="TotalItemsCount" Text="{Binding ResultsList.Count}"></TextBlock>
            </StatusBarItem>
            <Separator></Separator>
            <StatusBarItem>
                <ProgressBar Name="ProcessingProgressBar" Width="100" Height="15" Value="{Binding ProgressBarFilledInPercent}" ></ProgressBar>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
